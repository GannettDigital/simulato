# This is a workflow to scan commits for secrets and push the results back to Github comments.

name: GitleaksActions

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch (rename as required to release/main/etc..)
on:
  workflow_dispatch:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "Gitleaks"
  Gitleaks:
    # The type of runner that the job will run on
    runs-on: [ sec-eng ]
    timeout-minutes: 30

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2
  # Run the Gitleaks scan
    - name: GitleaksScan
      uses: zricethezav/gitleaks-action@1.6.0
      id: GitleaksScan

# Strip out ANSI characters that don't display well in Github comments
    - id: StripANSI
      run: |
           EXIT_CODE=$(echo ${{ steps.GitleaksScan.outputs.exitcode }} | sed -r "s/\x1B\[([0-9]{1,3}(;[0-9]{1,2})?)?[mGK]//g" )
           RESULT_CODE=$(echo ${{ steps.GitleaksScan.outputs.result }} | sed -r "s/\x1B\[([0-9]{1,3}(;[0-9]{1,2})?)?[mGK]//g" )
           echo ::set-output name=bodyline1::$EXIT_CODE
           echo ::set-output name=bodyline2::$RESULT_CODE
# Write the comments back to Github
    - uses: peter-evans/commit-comment@v1.2.1
      with:
        token: ${{ secrets.GITLEAKS_GANNETTDIGITAL_SIMULATO }}
        sha:
        body: |
            The result of the Gitleaks scan is:
            ${{ steps.StripANSI.outputs.bodyline1 }}
            ${{ steps.StripANSI.outputs.bodyline2 }}
        path:
        position:
